1. "window" and "document" OBJECTS

    window is a global OBJECT VARIABLE-->IT CONTAINS INFORMATION AND FUNCTIONALITY OF THE CURRENT ACTIVE TAB

    "document" is a nested variable inside window VARIABLE
    -->IT CONTAINS INFORMATION ABOUT THE LOADED WEBSITE CONTENT (HTML-CONTENT)


2. DRILLING THE DOM 

    (i)   done it via ->console.dir(document);
    (ii)  document.body.children[i] --> give the ith children HTML element of body 
    (iii) document.body.firstElementChild --> document.body.children[0] --> give 1st HTML element of body 
    (iv)  document.body.firstChild --> access the first child element of body (either HTML element or text)
    (v)   document.body.childNode -->give array of all child of body (HTML element + text included)


3 SELECTING ELEMENT OF HTML 

    (i)  let element=document.getElementById('id-name');
    (ii) let element = document.getElementByClassName('class-name');
    (iii) let element = document.querySelector('#id-name');
                                .querySelector('.class-name);
                                .querySelector('p');  ---> select first paragraph element

    (iv)  document.querySelectorAll('.class-name');
                  .querySelectorAll('p')
        

4 INSERTING NEW HTML ELEMENT via JAVASCRIPT

    // CREATE ELEMENT to be inserted
       
      let ele = document.createElement('p');
      ele.textContent="Sumit kumar"

      let ankerElement= document.createElement('a');
      ankerElement.textContent='Google';
      ankerElement.href = 'https://google.com';

    //access parent element  of the element to be inserted

        let eleParent=document.querySelector('id-of-parent');

    //insert 

        eleParent.append(ele);


5 REMOVE AN ELEMENT via JAVASCRIPT

    //select the element that should be removed

    let firstH1Element = document.querySelector('h1');

    //remove it 

    firstH1Element.remove();//--> works in newer browser
        or
    firstH1Element.parentElement.removeChild(firstH1Element); --> work in all browser 

6 MOVE ELEMENT via JAVASCRIPT 

    //select the parent element of the place where i want to insert 
    let parentElementWhereIInsert=document.querySelector('p');

    //select element which we want to MOVE
    let ele=document.querySelector('#element-to-be-moved');

    //append it 
    parentElementWhereIInsert.append(ele);

7 innerHTML  and textContent
 
 let firstPara = document.querySelector("p");
 console.log(firstPara.innerHTML);//gives full HTML inside firstPara
 console.dir(firstPara.innerHTML);//gives full HTML inside firstPara in DOM form

 console.log(firstPara.textContent);//gives only text part of this paragraph


8 EVENTS IN JAVASCRIPT

   eg of EVENTS --> (i) click on some ELEMENT
                    (ii) typing on some input field 
                    (iii) scroll to a certain part in page , etc 

9 REACTING TO EVENTS via JAVASCRIPT
 
   // select the element to which we want to REACT
      
      let paraElement = document.querySelector('p');

   // define a callBack function which defines the reaction 

    function changeParaText()
    {
        paraElement.textContent="hello ji ye change ho gaya";
    }

   // addEventListener 
    
    parentElement.addEventListener("click",changeParaText)


 10 EXAMPLE OF EVENT-LISTNER IN js

    paraElement.addEventListener('click',function_name);
    inputElement.addEventListener("keydown",function_name);
    inputElement.addEventListener("input",function_name);
    inputElement.addEventListener("keyup",function_name);


11 event ATTRIBUTE in callBack function


   // define a callBack function which defines the reaction --recall from lecture

    function changeUserInput(event)
    {
       let enteredText = inputElement.value ;
       or
       let enteredText =event.target.value;
    }

   
12 CHANGING ELEMENTS STYLE with JAVASCRIPT

    const spanElement = document.getElementById("an-id-name");
    spanElement.style.textAlign="center";
    spanElement.style.color="rgb(0,123,32)";


13 MANAGING CSS CLASS WITH JAVASCRIPT

    const spanElement = document.getElementById("an-id-name");
    spanElement.className="first-class second-class";
    spanElement.className="third-class";//it replaces all previous class 


    spanElement.classList.add('class-name');
    spanElement.classList.remove("class-name");



14 FORM-MANIPULATION USING DOM

    //select the form element 
    const formElement = document.querySelector('form')

    //add event listener to entire form and not just to button in form 
    formElement.addEventListener('submit' , savePlayerConfiguration)

    //add how the form submission will happen
    function savePlayerConfiguration(event)
    {
        
        event.preventDefault();

        //FormData() is a built-in function which extract all form data 

        const formData = new FormData(event.target);

        // using get("name-attribute-of-input-field") we can extract vlue 
        //stored that input field 

        const enteredName = formData.get("playername");

        // now we can use these data for our use 
    }


15 data-TYPENAME = ""

    //for player 1
    <button data-playerid="1"> edit </button>

    //for player 2
    <button data-playerid="2"> edit </button>

    function openPlayerConfiguration(event)
    {
        const clickedButton = event.target.dataset.playerid;
        //herre  if this event is triggred by player 1 we get clickedButton=1
        //else clickedButton=2
    }